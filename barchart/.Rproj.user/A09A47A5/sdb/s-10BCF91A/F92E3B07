{
    "contents" : "library(shinyjs)\nlibrary(barchart)\n\nshinyUI(fluidPage(\n\n  titlePanel(\"Cowboy Regression\"),\n\n  hr(), # horizontal line #########################################################################\n\n  ############\n  ### fluidRow\n  # This row has only one column\n  # The column contains the settings\n  # User Inputs:\n  #   file = a csv file with a data set\n  #   y = response variable of the data set\n  #   email = user's email address\n  #   submit = enables the submission of the inputs\n\n  fluidRow(\n\n    # The grid width of the column (must be between 1 and 12)\n    column(width = 3,\n           wellPanel(\n           fileInput(inputId = \"file\",\n                     label = \"Choose a file:\",\n                     multiple=FALSE), # Not allow multiple input\n\n           ########################\n           ### JavaScript Detection\n           # Type: noscript tag\n           # Label: JavaScript must be enabled.\n           # Description: notifies the user that JavaScript must\n           # be enabled to use the application.\n\n           # Use of the package shinyjs for hiding an end message\n           useShinyjs(),\n\n           #div(id = \"js\",\n           #   tags$noscript(\n            #     p(\"You must enable JavaScript in order to use\n             #      our App. :(\", style = \"color:red\"),\n              #   \"You can do this in\",\n               #  a(\"your browser settings.\",\n                #   href = \"http://www.enable-javascript.com/\",\n                 #  style = \"color:blue\"))\n                 #),\n\n           ##################\n           ### Data Set Input\n           # Type: file input\n           # ID: file\n           # Label: Choose a file\n           # Description: allows users to upload their data sets\n           # Notes: we can only take csv files for the moment\n\n           #hidden(\n            # div(id = \"uifile\",\n             #    fileInput(inputId = \"file\",\n              #             label = \"Choose a file:\",\n               #            multiple=FALSE)) # Not allow multiple input\n           #),\n\n           ####################\n           ### Method Selection\n           # Type: html output\n           # ID: method.selection\n           # Description: allows users to choose a method after a data set\n           #              is uploaded\n\n           htmlOutput(outputId = \"method.selection\"),\n\n           ###############################\n           ### Response Variable Selection\n           # Type: html output\n           # ID: y\n           # Description: allows users to choose response varialbe from the\n           #              uploaded data set\n           # Note: it's an output because the columnnames are the\n           #       extracted from the uploaded data set\n\n           htmlOutput(outputId = \"y\"),\n\n           #################\n           ### Submit Button\n           # Type: Action button\n           # ID: submit\n           # Label: Submit\n           # Description: allows users to submit their data\n           # Notes: only active once file uploaded and email address provided\n\n           actionButton(inputId = \"run\", label = \"Run\"),\n\n           #hidden(\n           #  div(id = \"uisubmit\",\n           #      actionButton(inputId = \"submit\", label = \"Submit\"))\n           #),\n\n           # line breaks\n           br(),\n\n           ##################\n           ### Hidden message\n           # Type: hidden, div\n           # id: thx\n           # content: two messages\n\n           hidden(\n             # create a division section\n             div(id=\"thx\",\n                 p(\"Thank you!\"), # create a paragraph\n                 p(\"Your response was submitted successfully.\"))\n           ) # end of the hidden message\n           ) # end of wellPanel\n    ), # end of the column\n\n    column(width = 9, offset = 0,\n           #tabsetPanel(\n           #  tabPanel(\"Time\", textOutput(outputId = \"currentTime\")),\n           #  tabPanel(\"Coefficients\",\n                      #htmlOutput(outputId = \"barplott\")\n                      #plotOutput(outputId = \"coefficients\")\n                      barchartOutput(outputId = \"coefficients\", width = \"100%\", height = \"550px\")\n           #           ),\n           #  tabPanel(\"Table\", tableOutput(outputId = \"table\"))\n           #)\n    ) # end of column\n\n  ) # end of fluidRow\n\n  #hr(), # horizontal line #########################################################################\n\n  #fluidRow(\n  #  column(12,\n  #         sliderInput(inputId='lambdaIndex',\n  #                     label = 'Lambda Index',\n  #                     min=1,\n  #                     max=100, #nrow(dataset),\n  #                     value=49, #min(1000, nrow(dataset)),\n  #                     step=1,\n  #                     round=0)\n  #  )\n  #)\n\n  #fluidRow(\n    #column(4,\n           #h4('Lasso Explorer')\n           #sliderInput(inputId='lambdaIndex', 'Lambda Index',\n            #           min=1,\n             #          max=100, #nrow(dataset),\n              #         value=1000, #min(1000, nrow(dataset)),\n               #        step=1,\n                #       round=0)\n           #br(),\n           #checkboxInput('jitter', 'Jitter'),\n           #checkboxInput('threshold', 'Apply thresholding')\n    #)\n    #column(4, offset = 0,\n    #       selectInput('x', 'X', names(dataset)),\n    #       selectInput('y', 'Y', names(dataset), names(dataset)[[2]]),\n    #       selectInput('color', 'Color', c('None', names(dataset)))\n    #),\n    #column(4,\n    #       selectInput('facet_row', 'Facet Row', c(None='.', names(dataset))),\n    #       selectInput('facet_col', 'Facet Column', c(None='.', names(dataset)))\n    #)\n  #)\n\n))\n",
    "created" : 1478381026962.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1233787488",
    "id" : "F92E3B07",
    "lastKnownWriteTime" : 1478732564,
    "path" : "~/Documents/project/ui.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "type" : "r_source"
}